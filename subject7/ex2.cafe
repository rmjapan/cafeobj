mod! TID {
  [Tid]
  ops t1 t2 t3 t4 : -> Tid {constr} .
}

mod! LOC {
  [Loc]
  ops rs cs : -> Loc {constr} .
}


mod! STATE4 {
  pr(LOC)
  [State4]
  op (locked:_,pc1:_,pc2:_,pc3:_,pc4:_) : Bool Loc Loc Loc Loc -> State4 {constr} .
}

mod! TAS4 {
  pr(STATE4)
  pr(TID)
  vars L1 L2 L3 L4 : Loc .
  var B : Bool .
  
  -- t1の遷移
  trans [try1] : (locked: false,pc1: rs,pc2: L2,pc3: L3,pc4: L4)
               => (locked: true,pc1: cs,pc2: L2,pc3: L3,pc4: L4) .
  trans [exit1] : (locked: B,pc1: cs,pc2: L2,pc3: L3,pc4: L4)
                => (locked: false,pc1: rs,pc2: L2,pc3: L3,pc4: L4) .
  
  -- t2の遷移
  trans [try2] : (locked: false,pc1: L1,pc2: rs,pc3: L3,pc4: L4)
               => (locked: true,pc1: L1,pc2: cs,pc3: L3,pc4: L4) .
  trans [exit2] : (locked: B,pc1: L1,pc2: cs,pc3: L3,pc4: L4)
                => (locked: false,pc1: L1,pc2: rs,pc3: L3,pc4: L4) .
  
  -- t3の遷移
  trans [try3] : (locked: false,pc1: L1,pc2: L2,pc3: rs,pc4: L4)
               => (locked: true,pc1: L1,pc2: L2,pc3: cs,pc4: L4) .
  trans [exit3] : (locked: B,pc1: L1,pc2: L2,pc3: cs,pc4: L4)
                => (locked: false,pc1: L1,pc2: L2,pc3: rs,pc4: L4) .
  
  -- t4の遷移
  trans [try4] : (locked: false,pc1: L1,pc2: L2,pc3: L3,pc4: rs)
               => (locked: true,pc1: L1,pc2: L2,pc3: L3,pc4: cs) .
  trans [exit4] : (locked: B,pc1: L1,pc2: L2,pc3: L3,pc4: cs)
                => (locked: false,pc1: L1,pc2: L2,pc3: L3,pc4: rs) .
}


mod! MULTISET(E :: TRIV) { 
  [Elt.E < MSet]
  op emp : -> MSet {constr} .
  op _ _ : MSet MSet -> MSet {constr assoc comm id: emp} .
}

mod! OCOMP principal-sort OComp {
  pr(TID)
  pr(LOC)
  [OComp]
  op (pc[_]:_) : Tid Loc -> OComp {constr} .
  op (locked:_) : Bool -> OComp {constr} .
}

mod! STATE {
  pr(MULTISET(OCOMP) * {sort MSet -> OComps})
  [State]
  op {_} : OComps -> State {constr} .
}

mod! TAS {
  pr(STATE)
  vars T T1 T2 T3 : Tid .
  var B : Bool .
  var OCs : OComps .
  
  trans [try] : {(locked: false) (pc[T]: rs) OCs}
              => {(locked: true) (pc[T]: cs) OCs} .
  trans [exit] : {(locked: B) (pc[T]: cs) OCs}
               => {(locked: false) (pc[T]: rs) OCs} .
}

-- 4スレッドで相互排他違反をチェック
open TAS4 .
red (locked: false, pc1: rs, pc2: rs, pc3: rs, pc4: rs) 
    =(1,*)=>* (locked: B, pc1: L1, pc2: L2, pc3: L3, pc4: L4)
    suchThat (L1 == cs and L2 == cs) or
             (L1 == cs and L3 == cs) or
             (L1 == cs and L4 == cs) or
             (L2 == cs and L3 == cs) or
             (L2 == cs and L4 == cs) or
             (L3 == cs and L4 == cs) .

close
open TAS .
    red {(locked: false) (pc[t1]: rs) (pc[t2]: rs) (pc[t3]: rs) (pc[t4]: rs)} 
        =(1,*)=>* {(pc[T1]: cs) (pc[T2]: cs) OCs} .
    red {(locked: false) (pc[t1]: rs) (pc[t2]: rs) (pc[t3]: rs) (pc[t4]: rs)} 
        =(1,*)=>* {(pc[T1]: cs) (pc[T2]: cs) (pc[T3]: cs) OCs} .
close
