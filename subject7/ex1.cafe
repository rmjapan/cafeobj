mod! TID {
  [Tid]
  ops t1 t2 t3 t4 : -> Tid {constr} .
}
mod! LOC {
  [Loc]
  ops rs ms cs ws es ds : -> Loc {constr} .
}
mod! STATE2 {
  pr(LOC)
  [State2]
  op (locked:_,pc1:_,pc2:_) : Bool Loc Loc -> State2 {constr} .
}
mod! FMUTEX2 {
  pr(STATE2)
  pr(TID)
  vars L1 L2 : Loc .
  var B : Bool .
  -- t1
  trans [want1] : (locked: false,pc1: rs,pc2: L2)
                => (locked: false,pc1: ms,pc2: L2) .
  trans [try1] : (locked: B,pc1: ms,pc2: L2)
               => (locked: true,pc1: cs,pc2: L2) .
  trans [exit1] : (locked: B,pc1: cs,pc2: L2)
                => (locked: false,pc1: rs,pc2: L2) .
  -- t2
  trans [want2] : (locked: false,pc1: L1,pc2: rs)
                => (locked: false,pc1: L1,pc2: ms) .
  trans [try2] : (locked: B,pc1: L1,pc2: ms)
               => (locked: true,pc1: L1,pc2: cs) .
  trans [exit2] : (loaded: B,pc1: L1,pc2: cs)
                => (locked: false,pc1: L1,pc2: rs) .
}

open FMUTEX2 .
red (locked: false, pc1: rs, pc2: rs) 
    =(1,*)=>* (locked: B, pc1: cs, pc2: cs) .
close